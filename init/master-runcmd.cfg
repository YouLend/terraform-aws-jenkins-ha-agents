#cloud-config

runcmd:
  - dnf clean metadata
  - dnf install -y --allowerasing curl
  - dnf groupinstall -y --allowerasing 'Development Tools'
  - dnf install -y docker git java-17-amazon-corretto python3-pip jq nfs-utils amazon-cloudwatch-agent tree cronie procps-ng file git
  - /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c file:/opt/aws/amazon-cloudwatch-agent/etc/cloudwatch-agent.json
  - groupadd -g 1011 brewers
  - adduser -u 1010 -g 1011 -s /bin/bash -d /home/brewer -c "User for installing homebrew packages" brewer
  - mkdir -p /home/brewer
  - chown -R brewer:brewers /home/brewer
  - 'echo "brewer ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/brewer'
  - chmod 440 /etc/sudoers.d/brewer
  - su -c '/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"' - brewer
  - echo >> /home/brewer/.bashrc
  - echo "eval \"\$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)\"" >> /home/brewer/.bashrc
  - su -c "brew install helm kubernetes-cli tfenv terragrunt python@3.13" - brewer
  - groupadd -g 500 jenkins
  - sleep 1
  - adduser -u 501 -g 500 -s /bin/bash -d /var/lib/jenkins -c "Jenkins Continuous Integration Server" jenkins
  - mkdir -p /var/lib/jenkins
  - chown -R jenkins:jenkins /var/lib/jenkins
  - while ! (echo > /dev/tcp/${master_storage}.efs.${aws_region}.amazonaws.com/2049) >/dev/null 2>&1; do sleep 10; done && sleep 10 && mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 "${master_storage}.efs.${aws_region}.amazonaws.com:/" /var/lib/jenkins
  - dnf install -y https://pkg.jenkins.io/redhat-stable/jenkins-${jenkins_version}-1.1.noarch.rpm
  - sed -i 's/#TimeoutStartSec=90/TimeoutStartSec=900/g' /usr/lib/systemd/system/jenkins.service
  - export JAVA_HEAP_GIGS=$(( ($(grep -Po "(?<=MemTotal:) *[0-9]*" /proc/meminfo | tr -d ' ') * 3/8)/1000000 ))
  - sed -i "s/JAVA_OPTS=-Djava.awt.headless=true/JAVA_OPTS=-Djava.awt.headless=true -Xmx$${JAVA_HEAP_GIGS}G/g" /usr/lib/systemd/system/jenkins.service
  - service jenkins start
  - systemctl enable jenkins
  - sh /opt/wait_for_setup_done.sh
  - sudo aws s3 cp s3://${env_name}-admin-jenkins-store/pluginlist/custom_plugins.txt /root/custom_plugins.txt
  - sudo chmod 0400 /root/custom_plugins.txt
  - sudo chown root:root /root/custom_plugins.txt
  - sudo aws s3 cp s3://${env_name}-admin-jenkins-store/yaml/jenkins.yaml /root/jenkins.yaml
  - sed -i -e "s@<slaveAgentPort>.*</slaveAgentPort>@<slaveAgentPort>49817</slaveAgentPort>@" /var/lib/jenkins/config.xml
  - sed -i -e "s@<numExecutors>.*</numExecutors>@<numExecutors>0</numExecutors>@" /var/lib/jenkins/config.xml
  - sed -i -e "s@<label>.*</label>@<label>master</label>@" /var/lib/jenkins/config.xml
  - |
    if [ -f "/var/lib/jenkins/api_key.txt" ]; then
      if [ -f "/var/lib/jenkins/azure_api_key.txt" ]; then
        export AUTH="${jenkins_username}:$(cat /var/lib/jenkins/azure_api_key.txt)"
      else
        export AUTH="admin:$(cat /var/lib/jenkins/api_key.txt)"
      fi
    else
      export AUTH="admin:$(cat /var/lib/jenkins/secrets/initialAdminPassword)"
    fi
  - curl -u $AUTH -o /var/cache/jenkins/war/WEB-INF/jenkins-cli.jar --create-dirs http://localhost:8080/jnlpJars/jenkins-cli.jar
  - |
    java -jar /var/cache/jenkins/war/WEB-INF/jenkins-cli.jar -s "http://localhost:8080/" -auth $AUTH install-plugin $(cat /root/custom_plugins.txt | tr "\n" " ") 2>&1
  - |
    if [ ! -f "/var/lib/jenkins/api_key.txt" ]; then
      echo "jenkins.model.Jenkins.instance.securityRealm.createAccount(\"admin\", \"${admin_password}\")" | java -jar /var/cache/jenkins/war/WEB-INF/jenkins-cli.jar -s "http://localhost:8080/" -auth "$AUTH" groovy = 2>&1
    fi
  - sh /opt/api_key.sh
  - |
    if [ ! -f "/var/lib/jenkins/azure_api_key.txt" ]; then
      echo "jenkins.model.Jenkins.instance.securityRealm.createAccount(\"${jenkins_username}\", \"${admin_password}\")" | sudo java -jar /var/cache/jenkins/war/WEB-INF/jenkins-cli.jar -s "http://localhost:8080/" -auth "admin:$(cat /var/lib/jenkins/api_key.txt)" groovy = 2>&1
    fi
  - sudo sh /opt/azure_api_key.sh
  - service jenkins stop
