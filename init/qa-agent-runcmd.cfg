#cloud-config

runcmd:
  - dnf clean metadata
  - dnf install -y --allowerasing curl
  - dnf groupinstall -y --allowerasing 'Development Tools'
  - dnf install -y docker git java-17-amazon-corretto python3-pip jq nfs-utils amazon-cloudwatch-agent tree cronie procps-ng file git xorg-x11-server-Xvfb gtk3-devel libnotify-devel nss libXScrnSaver alsa-lib
  - /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c file:/opt/aws/amazon-cloudwatch-agent/etc/cloudwatch-agent.json
  - groupadd -g 1011 brewers
  - adduser -u 1010 -g 1011 -s /bin/bash -d /home/brewer -c "User for installing homebrew packages" brewer
  - mkdir -p /home/brewer
  - chown -R brewer:brewers /home/brewer
  - 'echo "brewer ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/brewer'
  - chmod 440 /etc/sudoers.d/brewer
  - su -c '/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"' - brewer
  - echo >> /home/brewer/.bashrc
  - echo "eval \"\$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)\"" >> /home/brewer/.bashrc
  - sudo mkdir -p /etc/docker
  - sudo touch /etc/docker/daemon.json
  - sudo aws s3 cp s3://yl-docker-daemon/daemon.json /etc/docker/daemon.json
  - systemctl start docker
  - systemctl enable docker
  - groupadd -g 500 jenkins
  - adduser -u 501 -g 500 -s /bin/bash -d /var/lib/jenkins -c "Jenkins Continuous Integration Server" jenkins
  - mkdir -p /var/lib/jenkins
  - chown -R jenkins:jenkins /var/lib/jenkins
  - cd /var/lib/jenkins
  - wget -d https://repo.jenkins-ci.org/artifactory/releases/org/jenkins-ci/plugins/swarm-client/${swarm_version}/swarm-client-${swarm_version}.jar
  - usermod -a -G docker jenkins
  - MASTER_ID=$(aws autoscaling describe-auto-scaling-groups --auto-scaling-group-names ${master_asg} --query 'AutoScalingGroups[0].Instances[0].InstanceId' --output text --region ${aws_master_region}) && echo $MASTER_ID > /opt/master_id.txt
  - AGENT_ID=$(ec2-metadata --instance-id | awk '{print $2}') && echo $AGENT_ID > /opt/agent_id.txt
  - MASTER_IP=$(aws ec2 describe-instances --instance-ids $(cat /opt/master_id.txt) --query 'Reservations[0].Instances[0].PrivateIpAddress' --output text --region ${aws_master_region}) && echo $MASTER_IP > /opt/master_ip.txt
  - API_KEY=$(aws ssm get-parameter --name "${api_ssm_parameter}" --with-decryption --region ${aws_master_region} --output text --query 'Parameter.Value') && echo $API_KEY > /opt/api_key.txt
  # Install NVM for Jenkins user
  - su - jenkins -c "curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash"
  # Activate NVM for Jenkins user
  - su - jenkins -c "export NVM_DIR=/var/lib/jenkins/.nvm"
  - su - jenkins -c "[ -s \"$NVM_DIR/nvm.sh\" ] && \. \"$NVM_DIR/nvm.sh\""
  # Install Node.js LTS version
  - su - jenkins -c "nvm install --lts=gallium"
  # Install Cypress globally
  - su - jenkins -c "export CYPRESS_CACHE_FOLDER=/var/lib/jenkins/.cache/Cypress/13.2.0"
  - su - jenkins -c "npm install -g cypress@13.2.0"
